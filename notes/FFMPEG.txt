FFMPEG LIVE STREAMING - НАСТРОЙКИ
=================================
FFmpeg Live Streaming — это процесс использования программы FFmpeg для захвата, кодирования и передачи видео- и аудиопотоков в режиме реального времени. FFmpeg — это набор свободных библиотек с открытым исходным кодом, позволяющих записывать, конвертировать и передавать цифровые аудио- и видеозаписи в различных форматах.

Основные Принципы FFmpeg Live Streaming:
1. Захват Видео и Аудио: FFmpeg может захватывать видео с экрана или камеры, а также аудио с микрофона. Это делается с помощью команд, указывающих на источник видео и аудио, например, -i desktop для захвата всего экрана.
2. Кодирование и Сжатие: Захваченные потоки кодируются и сжимаются с помощью различных кодеков, таких как H.264 для видео и AAC для аудио. Параметры кодирования, такие как частота кадров (-r 30), битрейт и качество (-crf 25), могут быть настроены для оптимизации потока.
3. Передача Потока: Кодированные потоки передаются на сервер или в сеть с помощью различных протоколов, таких как RTMP, HLS или DASH. Например, поток может быть отправлен на сервер с помощью команды  -f flv rtmp://example.com/live/stream.

4. Воспроизведение: Полученный поток может быть воспроизведен в браузере или приложении с помощью соответствующих проигрывателей. Для этого часто используются протоколы, такие как HLS или WebRTC, которые позволяют обеспечить непрерывное воспроизведение видео.

Пример Использования FFmpeg для Live Streaming:
```bash
ffmpeg -framerate 30 -video_size 1920x1080 -i desktop \
       -c:v libx264 -r 30 -preset ultrafast -tune zerolatency -crf 25 -pix_fmt yuv420p \
       -f flv rtmp://example.com/live/stream
```
Эта команда захватывает экран с частотой 30 кадров в секунду, кодирует его с помощью H.264, и передает в поток на сервер example.com.
=================================
Настройки:
ВХОДНЫЕ УСТРОЙСТВА
-f v4l2     Устанавливает формат захвата видео (Video4Linux2).
-framerate 15				Частота кадров с камеры (15 FPS).
-video_size 640x480			Размер захватываемого видео.
-i /dev/video0			Устройство видеовхода (обычно веб-камера).
-f pulse -i default			Захват звука с помощью PulseAudio (с устройства по умолчанию).
ОБРАБОТКА ВИДЕО
-vf scale=w=1280:h=720:force_original_aspect_ratio=decrease
Масштабирует видео до 1280x720, сохраняя пропорции (с полями, если нужно).
КОДЕКИ И СКОРОСТЬ
-c:v libx264   		 Кодек H.264 для видео.
-preset ultrafast      Максимальная скорость кодирования, минимальная компрессия (низкое качество, но быстро).
-tune zerolatency				 Настройка кодека для низкой задержки — подходит для трансляций в реальном времени.
-c:a aac			Кодек AAC для аудио.
-ar 44100				Частота дискретизации звука: 44.1 kHz.
-b:a 128k					Битрейт аудио: 128 килобит в секунду.
ВЫВОД В ФОРМАТЕ HLS
-f hls			Выводим в формате HLS (HTTP Live Streaming).
-hls_time 0.5			 Длина одного сегмента в секундах (0.5 секунды — почти минимальная задержка).
-hls_list_size 2				Количество последних сегментов, хранимых в плейлисте (чем меньше — тем меньше задержка).
-hls_flags delete_segments+omit_endlist			
    delete_segments — старые сегменты удаляются.
    omit_endlist — не добавлять конец плейлиста (для постоянного стрима).
<ПУТЬ>/stream.m3u8
    Финальный файл `.m3u8`, указывающий на актуальные `.ts` сегменты.
